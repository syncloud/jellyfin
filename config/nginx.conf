worker_processes 4;

pid /var/snap/jellyfin/current/nginx.pid;
error_log syslog:server=unix:/dev/log warn;
daemon off;

events {
    worker_connections  1024;
}

http {
    map $request_uri $not_static {
        default                                             1;
        ~*\.(ico|css|js|gif|jpg|jpeg|png|svg|woff|woff2|ttf|eot|txt)$ 0;
    }
    access_log syslog:server=unix:/dev/log combined if=$not_static;

    include /snap/jellyfin/current/nginx/conf/mime.types;
   
    client_body_temp_path /var/snap/jellyfin/current/nginx/client_body_temp;
    proxy_temp_path /var/snap/jellyfin/current/nginx/proxy_temp;
    fastcgi_temp_path /var/snap/jellyfin/current/nginx/fastcgi_temp;
    uwsgi_temp_path /var/snap/jellyfin/current/nginx/puwsgi_temp;
    scgi_temp_path /var/snap/jellyfin/current/nginx/scgi_temp;
    client_max_body_size 20M;

    upstream backend {
        server unix:/var/snap/jellyfin/current/socket fail_timeout=0;
#         server http://localhost:8096 fail_timeout=0;
    }

    server {
        listen unix:/var/snap/jellyfin/common/web.socket;
        set_real_ip_from unix:;
        server_name localhost;

        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";

        location = / {
            return 302 https://$host/web/;
        }

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forward-For $proxy_add_x_forwarded_for; 
            proxy_set_header X-Forward-Proto https;
            proxy_set_header X-Forwarded-Protocol https;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_redirect off; 
        }

        location = /web/ {
            proxy_pass http://backend/web/index.html;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Protocol https;
            proxy_set_header X-Forwarded-Host $http_host;
        }

        location /socket {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Protocol https;
            proxy_set_header X-Forwarded-Host $http_host;
        }
    }
}
